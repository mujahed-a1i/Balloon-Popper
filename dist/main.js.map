{"version":3,"file":"main.js","mappings":"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","sources":["webpack://balloonpopper/./src/scripts/balloon.js","webpack://balloonpopper/./src/scripts/canvas.js","webpack://balloonpopper/./src/scripts/game.js","webpack://balloonpopper/./src/index.js"],"sourcesContent":["class Balloon {\n  static dy = 1;\n  constructor() {\n    \n    this.element = document.getElementById('gameScreen');\n    // this.element.id = 'gameScreen';\n    // document.body.appendChild(this.element); \n    this.ctx = this.element.getContext('2d');\n    this.images = [\n      \"./assets/balloons/pink.png\", \n      \"./assets/balloons/blue.png\", \n      \"./assets/balloons/green.png\", \n      \"./assets/balloons/red.png\", \n      \"./assets/balloons/purple.png\",\n      \"./assets/balloons/yellow.png\",\n      \"./assets/balloons/babyBlue.png\",\n      \"./assets/balloons/darkGreen.png\",\n      \"./assets/balloons/darkRed.png\",\n      \"./assets/balloons/babyPink.png\" ];\n\n    this.image = new Image();\n    this.image.src = this.images[Math.floor(Math.random() * this.images.length)];\n    this.image.onload = this.draw.bind(this);\n    this.width = this.image.width;\n    this.height = this.image.height;\n    this.radius = this.image.width / 2;\n    this.x = Math.floor(this.radius + Math.random()*(1000 - this.width + 1));\n    this.y = 627;\n    this.dx = 1;\n    this.dy = .6;\n    this.startAngle = 0;\n    this.endAngle = 2 * Math.PI;\n    // this.color = this.randomColor();\n    this.letter = this.randomLetter();\n    this.moveCounter = 0;\n    this.moveLimit = Math.floor(Math.random() * (140 - 40 + 1) + 40);\n    this.directions = [this.floatLeft, this.floatRight, this.floatUp];\n    this.direction = [this.floatLeft, this.floatRight, this.floatUp][Math.floor(Math.random()* 3)];\n  }\n\n\n\n  draw() { // Draws the balloon with corresponding Letter\n    this.ctx.drawImage(this.image,this.x, this.y, this.image.width, this.image.height);\n    // Draws the corresponding letter within the balloon\n    this.ctx.fillStyle = 'white'; // Set the color for the text\n    this.ctx.font = '25px Arial'; // Set the font style\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(this.letter, this.x + 27, this.y + 30);\n  }\n\n  randomLetter() { // Generates random balloon letters\n    let letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let index = Math.floor(Math.random() * 26);\n    return letters[index];\n  }\n\n  // randomColor() { // Generates random balloon color\n  //   const colors = ['red', 'orange', 'green', 'blue', 'indigo', 'violet'];\n  //   let index = Math.floor(Math.random() * 6);\n  //   return colors[index];\n\n  // }\n\n  floatRight() { // Balloon direction to NE\n    this.x+= this.dx;\n    this.y-= this.dy * Balloon.dy;\n  }\n\n  floatLeft(){ // Balloon direction to NW\n    this.x-= this.dx;\n    this.y-= this.dy * Balloon.dy;\n  }\n\n  floatUp(){ // Balloon direction to N\n    this.y-= this.dy * Balloon.dy;\n  }\n\n\n\n  \n  // }\n  validPos() { // checks to see if Balloon is within the canvas\n    if ((this.x > this.radius && (this.x < 1000 - (this.image.width/ 2))) && (this.y > 0)) {\n      return true;\n    } \n    return false;\n  }\n\n  move(){ // Implementing the balloons animation\n    this.moveCounter++;\n\n    if (!this.validPos()) { \n      // if Balloon is leaving the canvas, this will redirect\n      this.direction = this.directionExcluder();\n      // console.log('change');\n    }\n    \n    if ((this.moveCounter < this.moveLimit) && this.validPos) {\n      // While within the canvas, the balloon will \n      // move in one direction X amount\n      this.direction();\n    } else{\n      // Once the balloon reaches the direction limit,\n      // the balloon will reset to a new direction\n      this.direction = [this.floatLeft, this.floatRight, this.floatUp][Math.floor(Math.random()* 3)];\n      this.moveCounter = 0;\n      this.moveLimit = Math.floor(Math.random() * (130 - 30 + 1) + 30);\n    }\n  }\n  \n  directionExcluder() {\n    // this method helps to exclude the direction in which the balloon\n    // was cause to leave the direction\n    this.moveLimit += 300;\n    let array = [];\n    this.directions.forEach((direction) => {\n      if (direction !== this.direction && direction != this.floatUp) {\n        array.push(direction);\n      }\n    });\n\n    return array[0];\n    // return array[Math.floor(Math.random() * 1)];\n  }\n}\n\n\n\nexport default Balloon;\n","import Balloon from \"./balloon\";\nclass Canvas {\n  \n  constructor(width, height) {\n    this.element = document.getElementById('gameScreen');\n    // this.element.id = 'gameScreen';\n    // document.body.appendChild(this.element); \n    this.ctx = this.element.getContext('2d');\n    this.element.width = width;\n    this.element.height = height;\n    this.balloons = [];\n    this.balloon = new Balloon();\n    this.image = new Image();\n    this.image.src = \"./assets/sky.jpg\";\n  }\n\n  addBalloon() {\n    let balloon = new Balloon();\n    this.balloons.push(balloon);\n    // balloon.draw(this.ctx);\n    return balloon;\n  }\n\n  \n  animate(){\n    this.canvas.ctx.clearRect(0, 0, this.element.width, this.element.height);\n    requestAnimationFrame(() => this.animate());\n    this.balloons.forEach((balloon) => {\n      if (balloon.y > this.balloon.radius) { \n        // balloon.y -= 1;\n        // if (balloon.x > 25 && balloon.x < 975)\n        balloon.move();\n        balloon.draw();\n        // console.log(balloon.validPos());\n      }\n    });\n  }\n\n  // interval(){\n  //   this.addBalloon();\n  //   return setInterval(() => this.addBalloon(), 2000);\n  // }\n}\n\n\n  \n\n\nexport default Canvas;","import Balloon from \"./balloon\";\nimport Canvas from \"./canvas\";\nclass Game {\n  constructor() {\n    this.score = 0;\n    this.gameScore = document.getElementsByClassName(\"score\")[0];\n    this.life = 3;\n    this.gameLife = document.getElementById('lives');\n    this.canvas = new Canvas (1000, 600);\n    this.missed = 0;\n    this.popCounter = 0;\n    this.gamePopCounter = document.getElementsByClassName('popCounter')[0];\n    this.balloonCount = 5;\n    this.attempts = this.popCounter + this.missed;\n    this.pausedBalloons = [];\n    this.paused = false;\n    this.openModal = document.getElementById('openModal');\n\n    this.closeModal = document.getElementById('closeModal');\n    this.modal = document.getElementById('instructionModal');\n    this.restart = document.getElementById('restart');\n   \n    // addEventListener(\"keydown\", (event) => this.pop(event));\n    const disableEscapeKey = (event) => {\n      if (event.key === 'Escape' || event.key === 'Esc') {\n        event.preventDefault();\n      }\n    };\n    addEventListener('keydown', disableEscapeKey);\n    this.openModal.addEventListener('click', () => {\n      // this.openModal.scrollTop = 0;\n      this.pause();\n      this.modal.showModal();\n    });\n    this.closeModal.addEventListener('click', () =>{\n      document.removeEventListener('keydown', disableEscapeKey);\n      this.modal.close();\n      this.resume();\n      this.keyStroke();\n    });\n\n    this.modal.addEventListener('cancel', (event) => {\n  \n    });\n\n    this.newGame = document.getElementById('newGame');\n    this.restart.addEventListener('click', () => {\n      // this.canvas.balloons = [];\n      // this.reset();\n      // this.end();\n      window.location.reload();\n    });\n  }\n\n  pause(){\n    this.paused = true;\n\n    this.pausedBalloons = [...this.canvas.balloons];\n    this.canvas.balloons = [];\n  }\n\n  keyStroke() {\n    addEventListener(\"keydown\", (event) => this.pop(event));\n    const disableEscapeKey = (event) => {\n      if (event.key === 'Escape' || event.key === 'Esc') {\n        event.preventDefault();\n      }\n    };\n  }\n  \n  start() {\n    this.canvas.balloons.push(new Balloon(), new Balloon(), new Balloon(), new Balloon(), new Balloon());\n    this.pause();\n    this.modal.showModal();\n  }\n\n  reset() {\n    this.life = 3;\n    this.score = 0;\n    this.missed = 0;\n    this.popCounter = 0;\n    this.balloonCount = 5;\n    this.attempts = this.popCounter + this.missed;\n    this.pausedBalloons = [];\n    this.canvas.balloons = [];\n    // this.canvas.balloons.push(new Balloon(), new Balloon(), new Balloon(), new Balloon(), new Balloon());\n    this.gameScore.textContent = `Score: ${this.score}`;\n    this.gameLife.textContent = `Lives: ${this.life}`;\n    this.gamePopCounter.textContent = `Balloons Popped: ${this.popCounter}`;\n    // this.paused = false;\n    this.start();\n    // this.animate();\n  }\n\n  end() {\n    if (this.life === 0){\n      this.canvas.balloons = [];\n      this.endGameModal = document.getElementById('endStats');\n      // this.endGameModal.showModal();\n\n      let score = document.getElementsByClassName('score')[1];\n      let popCounter = document.getElementsByClassName('popCounter')[1];\n      let missedBalloons = document.getElementsByClassName('missedBalloons')[0];\n      let attempts = document.getElementsByClassName('attempts')[0];\n      let accuracy = document.getElementsByClassName('accuracy')[0];\n      this.attempts = this.popCounter + this.missed;\n      let percentage = Math.floor(this.popCounter/this.attempts * 100);\n      score.textContent = `Score: ${this.score}`;\n      popCounter.textContent = `Balloons Popped: ${this.popCounter}`;\n      missedBalloons.textContent = `Missed balloons: ${this.missed}`;\n      attempts.textContent = `Total Attempts: ${this.attempts}`;\n      accuracy.textContent = `Accuracy: ${percentage}%`;\n      document.removeEventListener('keydown', this.popFunction);\n      this.endGameModal.showModal();\n      this.newGame.addEventListener(\"click\", () => {\n        // this.pause();\n        // this.endGameModal.close();\n        // this.reset();\n        window.location.reload();\n      }); \n    }\n    \n\n  }\n\n  newGame(){\n    this.canvas.balloons = [];\n    this.canvas.balloons.push(new Balloon(), new Balloon(), new Balloon(), new Balloon(), new Balloon());\n    this.score = 0;\n    this.life = 3;\n    this.missed = 0;\n    this.popCounter = 0;\n    this.balloonCount = 5;\n    this.animate();\n  }\n\n  resume() {\n    this.paused = false;\n    this.canvas.balloons = [...this.pausedBalloons];\n    this.pausedBalloons = [];\n    this.animate();\n  }\n \n  animate(){\n    if (!this.paused) {\n      this.increaseBalloonSpeed();\n      this.canvas.ctx.clearRect(0, 0, 1000, 600);\n      requestAnimationFrame(() => this.animate());\n      this.canvas.balloons.forEach((balloon, index) => {\n        this.end();\n        if (balloon.y <= 0) {\n          this.missed++;\n          this.loseLife();\n          this.canvas.balloons.splice(index, 1);\n          if (this.life > 0) {\n            this.canvas.addBalloon();\n          }\n        }\n        if (balloon.y > 0) { \n          balloon.move();\n          balloon.draw();\n        }\n      });\n    }\n  }\n\n\n\n  loseLife() { \n    this.life--;\n    if (this.life >= 0) {\n      this.gameLife.textContent = `Lives: ${this.life}`;\n    }\n  }\n\n  pop(event) {\n    if (this.life > 0) {\n      if (event.keyCode > 64 && event.keyCode < 91) {\n        // checking to see if the keypress is only alphabetical chars\n        let correctKeyPress = false;\n        for (let i = 0; i < this.canvas.balloons.length; i++) {\n          let balloon = this.canvas.balloons[i];\n          if (event.key.toUpperCase() === balloon.letter) {\n            // if the keypress matches the balloon's letter\n            // the balloon will be removed from the array\n            // Once 1 balloon is removed, another one is being added.\n            this.canvas.balloons.splice(i, 1);\n            this.score++;\n            this.gameScore.textContent = `Score: ${this.score}`;\n            this.canvas.addBalloon();\n            this.balloonCount++;\n            correctKeyPress = true;\n            // Break after the first matching balloon is removed\n            this.popCounter++;\n            this.gamePopCounter.textContent = `Balloons Popped: ${this.popCounter}`;\n            break; \n          } \n        }\n        \n        if (!correctKeyPress) {\n          this.score--;\n          this.gameScore.textContent = `Score: ${this.score}`;\n          this.missed++;\n        }\n      }\n    }\n  }\n\n  increaseBalloonSpeed(){\n    if (this.score > 0 && this.score % 10 === 0) {\n      Balloon.dy *= 1.0015;\n    }\n  }\n}\n\nexport default Game;","// import Balloon from \"./scripts/balloon\";\n// import Canvas from \"./scripts/canvas\";\nimport Game from \"./scripts/game\";\n\n\ndocument.addEventListener('DOMContentLoaded', () =>  {\n  \n  let game1 = new Game();\n  game1.start();\n  // let score = document.getElementById('score');\n  // score.textContent = `Score: ${game1.score}`;\n\n});"],"names":["Balloon","static","constructor","this","element","document","getElementById","ctx","getContext","images","image","Image","src","Math","floor","random","length","onload","draw","bind","width","height","radius","x","y","dx","dy","startAngle","endAngle","PI","letter","randomLetter","moveCounter","moveLimit","directions","floatLeft","floatRight","floatUp","direction","drawImage","fillStyle","font","textAlign","textBaseline","fillText","validPos","move","directionExcluder","array","forEach","push","balloons","balloon","addBalloon","animate","canvas","clearRect","requestAnimationFrame","score","gameScore","getElementsByClassName","life","gameLife","Canvas","missed","popCounter","gamePopCounter","balloonCount","attempts","pausedBalloons","paused","openModal","closeModal","modal","restart","disableEscapeKey","event","key","preventDefault","addEventListener","pause","showModal","removeEventListener","close","resume","keyStroke","newGame","window","location","reload","pop","start","reset","textContent","end","endGameModal","missedBalloons","accuracy","percentage","popFunction","increaseBalloonSpeed","index","loseLife","splice","keyCode","correctKeyPress","i","toUpperCase","Game"],"sourceRoot":""}